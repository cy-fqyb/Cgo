definitions:
  common.RT-array_models_Users:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.Users'
        type: array
      msg:
        type: string
    type: object
  common.RT-int:
    properties:
      code:
        type: integer
      data:
        type: integer
      msg:
        type: string
    type: object
  common.RT-models_MsgHistory:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.MsgHistory'
      msg:
        type: string
    type: object
  common.RT-models_MsgList:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.MsgList'
      msg:
        type: string
    type: object
  common.RT-models_MsgNum:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.MsgNum'
      msg:
        type: string
    type: object
  common.RT-models_RoomApply:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.RoomApply'
      msg:
        type: string
    type: object
  common.RT-models_Users:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.Users'
      msg:
        type: string
    type: object
  common.RT-string:
    properties:
      code:
        type: integer
      data:
        type: string
      msg:
        type: string
    type: object
  common.Result:
    properties:
      code:
        type: integer
      data: {}
      errs: {}
      msg:
        type: string
    type: object
  dto.UserApplyDto:
    properties:
      friend_id:
        type: string
      is_accept:
        type: boolean
      user_id:
        type: string
    required:
    - is_accept
    - user_id
    type: object
  dto.UserLoginDto:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.MsgHistory:
    properties:
      avatar:
        type: string
      content:
        type: string
      createTime:
        type: string
      fromId:
        type: string
      id:
        type: string
      isRead:
        type: integer
      name:
        type: string
      toId:
        type: string
    type: object
  models.MsgList:
    properties:
      avatar:
        type: string
      content:
        type: string
      createTime:
        type: string
      friendId:
        type: string
      friendName:
        type: string
      msgCount:
        type: integer
    type: object
  models.MsgNum:
    properties:
      avatar:
        type: string
      id:
        type: string
      msgCount:
        type: integer
      name:
        type: string
    type: object
  models.Room:
    properties:
      avatar:
        type: string
      create_time:
        type: string
      master_id:
        type: string
      name:
        type: string
      update_time:
        type: string
    type: object
  models.RoomApply:
    properties:
      create_time:
        type: string
      master_id:
        type: string
      update_time:
        type: string
      user_id:
        type: string
    required:
    - master_id
    - user_id
    type: object
  models.UserFriend:
    properties:
      create_time:
        type: string
      friend_id:
        type: string
      update_time:
        type: string
      user_id:
        type: string
    type: object
  models.UserRegister:
    properties:
      avatar:
        type: string
      code:
        type: string
      create_time:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      sex:
        type: string
      status:
        type: integer
      synopsis:
        type: string
      update_time:
        type: string
    required:
    - code
    - email
    - name
    - password
    - sex
    type: object
  models.Users:
    properties:
      avatar:
        type: string
      create_time:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      sex:
        type: string
      status:
        type: integer
      synopsis:
        type: string
      update_time:
        type: string
    required:
    - email
    - name
    - password
    - sex
    type: object
host: 159.75.155.236:8080
info:
  contact: {}
  description: im在线通信系统前后台接口文档
  title: Im在线通信系统接口文档
  version: 1.0 版本
paths:
  /backend/common/onlineUserCount:
    get:
      consumes:
      - application/json
      description: 获取当前在线用户人数
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-int'
      summary: 获取当前在线用户人数
      tags:
      - 后台公共接口
  /common/email:
    get:
      consumes:
      - application/json
      description: 发送邮箱验证码
      parameters:
      - description: 邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 发送邮箱验证码
      tags:
      - 前端通用接口
  /common/test:
    get:
      consumes:
      - application/json
      description: 测试接口
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 测试接口
      tags:
      - 前端通用接口
  /common/upload:
    post:
      consumes:
      - application/json
      description: 文件上传接口
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 文件上传接口
      tags:
      - 前端通用接口
  /front/msg/getMsgHistory:
    get:
      consumes:
      - application/json
      description: 获取用户消息历史记录
      parameters:
      - description: 用户id
        in: query
        name: user_id
        required: true
        type: string
      - description: 好友id
        in: query
        name: from_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_MsgHistory'
      summary: 获取用户消息历史记录
      tags:
      - 前端消息接口
  /front/msg/getMsgList:
    get:
      consumes:
      - application/json
      description: 获取用户消息列表
      parameters:
      - description: 用户id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_MsgList'
      summary: 获取用户消息列表
      tags:
      - 前端消息接口
  /front/msg/getMsgNum:
    get:
      consumes:
      - application/json
      description: 获取用户未读消息数量
      parameters:
      - description: 用户id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_MsgNum'
      summary: 获取用户未读消息数量
      tags:
      - 前端消息接口
  /front/room/applyJoinRoom:
    post:
      consumes:
      - application/json
      description: 申请加入房间
      parameters:
      - description: 用户申请信息
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.RoomApply'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 申请加入房间
      tags:
      - 前端房间接口
  /front/room/createRoom:
    post:
      consumes:
      - application/json
      description: 创建房间
      parameters:
      - description: 房间信息
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 创建房间
      tags:
      - 前端房间接口
  /front/room/getRoomApply:
    get:
      consumes:
      - application/json
      description: 获取房间的申请信息
      parameters:
      - description: 房主id
        in: query
        name: master_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_RoomApply'
      summary: 获取房间的申请信息
      tags:
      - 前端房间接口
  /front/room/getRoomUsers:
    get:
      consumes:
      - application/json
      description: 获取所有用户的信息
      parameters:
      - description: 群组id
        in: query
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_Users'
      summary: 获取聊天群中的所有用户
      tags:
      - 前端房间接口
  /front/room/handleRoomApplication:
    post:
      consumes:
      - application/json
      description: 处理用户加群申请
      parameters:
      - description: 处理用户申请信息
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.RoomApply'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 处理用户加群申请
      tags:
      - 前端房间接口
  /front/user/addFriend:
    post:
      consumes:
      - application/json
      description: 请求添加好友
      parameters:
      - description: 处理申请的参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserFriend'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 请求添加好友
      tags:
      - 前端用户接口
  /front/user/deleteFriend:
    post:
      consumes:
      - application/json
      description: 删除好友
      parameters:
      - description: 处理申请的参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserFriend'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 删除好友
      tags:
      - 前端用户接口
  /front/user/getUserFriendApply:
    get:
      consumes:
      - application/json
      description: 获取用户好友申请
      parameters:
      - description: 用户id
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Result'
      summary: 获取用户好友申请
      tags:
      - 前端用户接口
  /front/user/getUserFriends:
    get:
      consumes:
      - application/json
      description: 获取用户好友
      parameters:
      - description: 用户id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-array_models_Users'
      summary: 获取用户好友
      tags:
      - 前端用户接口
  /front/user/getUserInformation:
    get:
      consumes:
      - application/json
      description: 获取用户个人信息
      parameters:
      - description: 用户id
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_Users'
      summary: 获取用户个人信息
      tags:
      - 前端用户接口
  /front/user/handleApplication:
    post:
      consumes:
      - application/json
      description: 处理用户好友申请
      parameters:
      - description: 处理申请的参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserApplyDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 处理用户好友申请
      tags:
      - 前端用户接口
  /front/user/login:
    post:
      consumes:
      - application/json
      description: user login
      parameters:
      - description: Id
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-models_Users'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 用户登录接口
      tags:
      - 前端用户接口
  /front/user/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口
      parameters:
      - description: 注册用户的信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 用户注册接口
      tags:
      - 前端用户接口
  /front/user/searchUser:
    get:
      consumes:
      - application/json
      description: 搜索用户
      parameters:
      - description: 用户名
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-array_models_Users'
      summary: 搜索用户
      tags:
      - 前端用户接口
  /front/user/updateUserInfo:
    post:
      consumes:
      - application/json
      description: 修改用户信息
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.RT-string'
      summary: 修改用户信息
      tags:
      - 前端用户接口
swagger: "2.0"
